package com.best1.scm.modules.webapi.service;

import java.util.Date;
import java.util.List;

import org.apache.commons.lang3.time.DateUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.best1.scm.common.utils.IdGen;
import com.best1.scm.modules.delivery.service.DeliveryOrderintransitDetailService;
import com.best1.scm.modules.delivery.service.DeliveryOrderintransitPathdetailService;
import com.best1.scm.modules.delivery.service.DeliveryOrderintransitService;
import com.best1.scm.modules.webapi.client.ExpressClient;
import com.best1.scm.modules.webapi.dao.ExpressDao;
import com.best1.scm.modules.webapi.entity.ExpressCarrierInfo;
import com.best1.scm.modules.webapi.mapper.AliExpress;
import com.best1.scm.modules.webapi.mapper.Data;
import com.best1.scm.modules.webapi.mapper.ShowapiResBody;

/**
 * 快递公司API业务
 * 
 * @author jiashizhen
 *
 */
@Service
public class ExpressService {

	@Autowired
	ExpressDao expressDao;
	@Autowired
	ExpressClient expressClient;
	@Autowired
	DeliveryOrderintransitDetailService deliveryOrderintransitDetailService;
	@Autowired
	DeliveryOrderintransitService deliveryOrderintransitService;
	@Autowired
	DeliveryOrderintransitPathdetailService deliveryOrderintransitPathDetailService;
	
	private Integer successCode = 0;//查询成功状态
	
	/**
	 * 查询出需要拉取快递信息的订单的订单号和快递公司
	 */
	public List<ExpressCarrierInfo> findToFetchExpressNo(
			ExpressCarrierInfo expressCarrierInfo) {
		return expressDao.findListToFetchExpress(expressCarrierInfo);
	}
	
	/**
	 * 更新快递状态
	 */
	public void updateTrackingStatus(
			ExpressCarrierInfo expressCarrierInfo) {
		expressDao.updateTrackingStatus(expressCarrierInfo);
	}
	
	/**
	 * 删除以前的快递路途信息
	 */
	public void deletePathDetails(
			ExpressCarrierInfo expressCarrierInfo) {
		expressDao.deletePathDetails(expressCarrierInfo);
	}
	
	/**
	 * 插入新的快递路径信息
	 */
	public void insertPathDetails(
			ExpressCarrierInfo expressCarrierInfo){
		expressDao.insertPathDetails(expressCarrierInfo);
	}

	/*
	 * 
	 */
	public void handleData() {
		// 取出要查的订单号
		ExpressCarrierInfo expressCarrierInfo = new ExpressCarrierInfo();
		// 设置发货方式查询条件
		expressCarrierInfo.setDeliveryType(1001);
		expressCarrierInfo.setDeliverySubtype(1001);
		
		// 设置记录生成时间 距离现在时间小于七天
		expressCarrierInfo.setRecordcreatedtimeStart(getStartDate());
		
		List<ExpressCarrierInfo> deliveryOrderintransitList = findToFetchExpressNo(expressCarrierInfo);
		
		for (ExpressCarrierInfo d : deliveryOrderintransitList) {
			
			String expressCompanyNo = d.getApicode();
			String trackingNumber = d.getTrackingnumber();
			AliExpress express = expressClient.requestAPIAliExpress(expressCompanyNo,trackingNumber);
			if(successCode == express.getShowapi_res_code()){
				//查询成功
				//删除以前的快递路径信息
				deletePathDetail(trackingNumber);
				
				ShowapiResBody showapi_res_body = new ShowapiResBody();
				//获取具体快递信息
				showapi_res_body = express.getShowapi_res_body();
				
				if(showapi_res_body.getStatus() == 4 || showapi_res_body.getStatus() == 5){
					//签收和拒收 更新快递状态
					updateStatus(showapi_res_body.getMailNo(),showapi_res_body.getStatus(),showapi_res_body.getData().get(0).getTime());
				}
				//更新快递信息到数据库
				List<Data> dataList = showapi_res_body.getData();
				insertPathDetail(dataList,showapi_res_body.getStatus(),trackingNumber);
			}
		}
	}

	/**
	 * 获取七天前日期
	 * 
	 * @return
	 */
	public Date getStartDate() {
		System.out.println(DateUtils.addDays(new Date(), -7));
		return DateUtils.addDays(new Date(), -7);
	}
	
	/**
	 * 
	 * @param trackingNumber 快递单号
	 * @param status	快递状态
	 */
	public void updateStatus(String trackingNumber,Integer status,Date time){
		ExpressCarrierInfo expressCarrierInfo = new ExpressCarrierInfo();
		
		Integer scmTrackingStatus;
		if(status == 4){
			scmTrackingStatus = 1002;
		}else{
			scmTrackingStatus = 1003;
		}
		
		expressCarrierInfo.setLastupdatedtime(new Date());
		expressCarrierInfo.setTrackingstatus(scmTrackingStatus);
		expressCarrierInfo.setReceiptorrejecttime(time);
		expressCarrierInfo.setTrackingnumber(trackingNumber);
		
		updateTrackingStatus(expressCarrierInfo);
	}
	
	/**
	 * 向数据库写入快递路径信息
	 */
	public void insertPathDetail(List<Data> datas,Integer status,String trackingnumber){
		//写入新的快递路径信息
		ExpressCarrierInfo expressCarrierInfo = new ExpressCarrierInfo();
		for(int i=0; i< datas.size(); i++){
			expressCarrierInfo.setId(IdGen.uuid());
			if(status == 4 && i == 0){
				//已签收
				expressCarrierInfo.setPathdesc(datas.get(i).getContext());
				expressCarrierInfo.setPathdatetime(datas.get(i).getTime());
				expressCarrierInfo.setDeliverycode(1002);
				expressCarrierInfo.setReceiptorrejecttime(datas.get(i).getTime());
				expressCarrierInfo.setReceiptperson(datas.get(i).getContext());
				expressCarrierInfo.setRecordcreatedtime(new Date());
				expressCarrierInfo.setRecordcreatedby(6);
				expressCarrierInfo.setTrackingnumber(trackingnumber);
			}else if(status == 5 && i == 0){
				//已拒收
				expressCarrierInfo.setPathdesc(datas.get(i).getContext());
				expressCarrierInfo.setPathdatetime(datas.get(i).getTime());
				expressCarrierInfo.setDeliverycode(1003);
				expressCarrierInfo.setReceiptorrejecttime(datas.get(i).getTime());
				expressCarrierInfo.setReceiptperson(null);
				expressCarrierInfo.setRecordcreatedtime(new Date());
				expressCarrierInfo.setRecordcreatedby(6);
				expressCarrierInfo.setTrackingnumber(trackingnumber);
			}else{
				expressCarrierInfo.setPathdesc(datas.get(i).getContext());
				expressCarrierInfo.setPathdatetime(datas.get(i).getTime());
				expressCarrierInfo.setDeliverycode(1001);
				expressCarrierInfo.setReceiptorrejecttime(null);
				expressCarrierInfo.setReceiptperson(null);
				expressCarrierInfo.setRecordcreatedtime(new Date());
				expressCarrierInfo.setRecordcreatedby(6);
				expressCarrierInfo.setTrackingnumber(trackingnumber);
			}
			insertPathDetails(expressCarrierInfo);
		}
		
	}
	
	/**
	 * 
	 * @param trackingNumber 快递单号
	 */
	public void deletePathDetail(String trackingNumber){
		ExpressCarrierInfo expressCarrierInfo = new ExpressCarrierInfo();
		expressCarrierInfo.setTrackingnumber(trackingNumber);
		deletePathDetails(expressCarrierInfo);
	}
}
